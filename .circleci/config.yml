run_conda: &run_conda
    docker:
        - image: circleci/python
          environment:
              ARCCSSIVE_DB: postgresql://postgres:password@localhost/postgres
              LC_ALL: C.UTF-8
        - image: circleci/postgres:9.6
          environment:
              POSTGRES_USER: postgres
              POSTGRES_DB: postgres
              POSTGRES_PASSWORD: password
    steps:
        - checkout
        - run:
            name: install-conda
            command: |
                wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O conda.sh
                bash conda.sh -b -p ~/miniconda
        - run:
            name: setup
            command: |
                mkdir -p /tmp/artefacts/{tests/pytest,persist}
                source ~/miniconda/bin/activate
                conda install --yes conda-build conda-verify anaconda-client postgresql
                conda config --system --add channels conda-forge
                psql -h localhost -U postgres -f db/nci.sql
                psql -h localhost -U postgres -f db/tables.sql
        - run:
            name: build
            command: |
                source ~/miniconda/bin/activate
                mv conda/run_test_coverage.sh conda/run_test.sh
                conda build conda -c conda-forge --python=${PYTHON_VER} --output-folder /tmp/artefacts
                cp /tmp/artefacts/*/*.tar.bz2 /tmp/artefacts/persist
        - run:
            name: report-coverage
            when: always
            command: |
                bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r /tmp/artefacts/tests/pytest/coverage.xml
                bash <(curl -s https://codecov.io/bash) -f /tmp/artefacts/tests/pytest/coverage.xml
        - persist_to_workspace:
            root: /tmp/artefacts/persist
            paths: '*'
            when: always
        - store_test_results:
            path: /tmp/artefacts/tests
            when: always

version: 2
jobs:
    py3:
        environment:
            PYTHON_VER: 3
        <<: *run_conda

    publish:
        working_directory: /circleci
        docker:
            - image: scottwales/conda-build
        steps:
            - attach_workspace:
                at: /tmp/artefacts/persist

            - run:
                anaconda --token "${ANACONDA_TOKEN}" upload --user "${ANACONDA_USER}" /tmp/artefacts/persist/*.tar.bz2

workflows:
    version: 2
    build_and_publsh:
        jobs:
            - py3:
                filters:
                    tags:
                        only: /.*/

            - publish:
                requires:
                    - py3
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
